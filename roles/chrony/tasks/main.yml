---
- name: check if chronyd running, break the role
  shell: systemctl is-active chronyd
  register: chronyd_status
  changed_when: false
  ignore_errors: true

- name: terminate the play if chronyd running
  meta: end_play
  when:
    - chronyd_status.rc == 0
    - "'active' in chronyd_status.stdout"

- name: uninstall residual ntp chrony
  package: name={{ item }} state=absent
  ignore_errors: true
  with_items:
  - "ntp"
  - "chrony"

- name: prepare some dirs
  file: name={{ item }} state=directory
  with_items:
  - "/etc/chrony"
  - "/var/lib/chrony"
  - "/var/log/chrony"

- name: distribute chronyd binary
  copy: src={{ base_dir }}/extra-bin/chronyd dest=/usr/sbin/chronyd mode=0755

- name: create chronyd systemd unit file
  template: src=chronyd.service.j2 dest=/etc/systemd/system/chronyd.service

- name: configure chrony server
  template: src=server.conf.j2 dest=/etc/chrony/chrony.conf
  when: 'inventory_hostname == groups.chrony[0]'

- name: configure chrony client
  template: src=client.conf.j2 dest=/etc/chrony/chrony.conf
  when: 'inventory_hostname != groups.chrony[0]'

- name: enable chronyd service on startup
  shell: systemctl disable chronyd && systemctl enable chronyd
  ignore_errors: true

- name: start chronyd service
  shell: systemctl daemon-reload && systemctl restart chronyd
  ignore_errors: true
  tags: restart_chronyd

- name: wait for chronyd running
  shell: "systemctl is-active chronyd.service"
  register: svc_status
  until: '"active" in svc_status.stdout'
  retries: 3
  delay: 3
  tags: restart_chronyd
