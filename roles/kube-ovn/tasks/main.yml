# delete original cni configurations
- name: delete default cni configurations
  file: path=/etc/cni/net.d/10-default.conf state=absent

- block:
    - name: prepare kube-ovn-related files
      template: src={{ item }}.j2 dest={{ cluster_dir }}/yml/{{ item }}
      with_items:
      - "install.sh"
      - "coredns.yaml"

    - name: prepare dnscache deployment file with ipvs
      template: src=nodelocaldns-ipvs.yaml.j2 dest={{ cluster_dir }}/yml/nodelocaldns.yaml
      when: "PROXY_MODE == 'ipvs'"

    - name: prepare dnscache deployment file with iptables
      template: src=nodelocaldns-iptables.yaml.j2 dest={{ cluster_dir }}/yml/nodelocaldns.yaml
      when: "PROXY_MODE == 'iptables'"

    - name: apply coredns, dnscache yaml
      shell: "kubectl apply -f {{ cluster_dir }}/yml/coredns.yaml && \
			  kubectl apply -f {{ cluster_dir }}/yml/nodelocaldns.yaml"

    - name: install kube-ovn network
      shell: 'cd {{ cluster_dir }}/yml/ && bash install.sh >> /tmp/install-kube-ovn-`date +"%Y%m%d%H%M%S"`.log 2>&1'
  run_once: true
  ignore_errors: true
  connection: local

- name: wait for kube-ovn running in a polling manner
  shell: "kubectl get pod -n kube-system -o wide|grep 'kube-ovn-cni'|grep ' {{ K8S_NODENAME }} '|awk '{print $3}'"
  register: pod_status
  until: pod_status.stdout == "Running"
  retries: 15
  delay: 8
  ignore_errors: true
  connection: local
  tags: force_change_certs
