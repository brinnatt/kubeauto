- name: prepare some dirs
  file: name={{ ETCD_DATA_DIR }} state=directory mode=0700

- name: download etcd binary
  copy: src={{ base_dir }}/extra-bin/{{ item }} dest={{ bin_dir }}/{{ item }} mode=0755
  with_items:
  - etcd
  - etcdctl
  tags: upgrade_etcd

- name: create etcd CSR
  template: src=etcd-csr.json.j2 dest={{ cluster_dir }}/ssl/etcd-csr.json
  connection: local
  run_once: true
  tags: force_change_certs

- name: create etcd certs and private key
  shell: "cd {{ cluster_dir }}/ssl && {{ base_dir }}/extra-bin/cfssl gencert \
        -ca=ca.pem \
        -ca-key=ca-key.pem \
        -config=ca-config.json \
        -profile=kubernetes etcd-csr.json | {{ base_dir }}/extra-bin/cfssljson -bare etcd"
  connection: local
  run_once: true
  tags: force_change_certs

- name: distribute etcd cert-related files
  copy: src={{ cluster_dir }}/ssl/{{ item }} dest={{ ca_dir }}/{{ item }}
  with_items:
  - ca.pem
  - etcd.pem
  - etcd-key.pem
  tags: force_change_certs

- name: create etcd systemd unit file
  template: src=etcd.service.j2 dest=/etc/systemd/system/etcd.service
  tags: upgrade_etcd, restart_etcd

- name: enable etcd service on startup
  shell: systemctl enable etcd
  ignore_errors: true

- name: start etcd service
  shell: systemctl daemon-reload && systemctl restart etcd
  ignore_errors: true
  tags: upgrade_etcd, restart_etcd, force_change_certs

- name: wait for etcd service running
  shell: "systemctl is-active etcd.service"
  register: etcd_status
  until: '"active" in etcd_status.stdout'
  retries: 8
  delay: 8
  tags: upgrade_etcd, restart_etcd, force_change_certs
