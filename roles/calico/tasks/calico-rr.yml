- block:
    - name: choose default rr nodes(master nodes by default)
      set_fact: NODE_IPS="{% for host in groups['kube_master'] %}{{ host }} {% endfor %}"
      when: "CALICO_RR_NODES|length == 0"

    - name: choose user-defined rr nodes
      set_fact: NODE_IPS="{% for host in CALICO_RR_NODES %}{{ host }} {% endfor %}"
      when: "CALICO_RR_NODES|length > 0"

    - name: show rr nodes
      debug: var="NODE_IPS"

    - name: configure routeReflectorClusterID
      shell: 'for ip in {{ NODE_IPS }};do \
                node_name=$({{ bin_dir }}/calicoctl get node -owide|grep " $ip/"|cut -d" " -f1) && \
                {{ bin_dir }}/calicoctl patch node "$node_name" \
                  -p "{\"spec\": {\"bgp\": {\"routeReflectorClusterID\": \"244.0.0.1\"}}}"; \
             done'

    - name: node label
      shell: 'for ip in {{ NODE_IPS }};do \
                node_name=$({{ bin_dir }}/calicoctl get node -owide|grep " $ip/"|cut -d" " -f1) && \
                {{ bin_dir }}/kubectl label node "$node_name" route-reflector=true --overwrite;
             done'
      connection: local

    - name: configure calico bgp yaml file
      template: src={{ item }}.j2 dest=/etc/calico/{{ item }}
      with_items:
      - "bgp-default.yaml"
      - "bgp-rr.yaml"

    - name: apply calico bgp configuration
      shell: "{{ bin_dir }}/calicoctl apply -f /etc/calico/bgp-rr.yaml && \
            sleep 5 && \
            {{ bin_dir }}/calicoctl apply -f /etc/calico/bgp-default.yaml && sleep 2"
  run_once: true

- name: check bgp connection
  shell: "{{ bin_dir }}/calicoctl node status"
  register: bgp_status

- debug: var="bgp_status.stdout_lines"
