- name: stop ectd service
  service: name=etcd state=stopped

- name: clean etcd data directory
  file: name={{ ETCD_DATA_DIR }}/member state=absent

- name: clean last backup data
  file: name=/etcd_backup state=absent

- name: create backup directory
  file: name=/etcd_backup state=directory

- name: prepare specific etcd data for retore
  copy:
    src: "{{ cluster_dir }}/backup/{{ db_to_restore }}"
    dest: "/etcd_backup/snapshot.db"

- name: etcd data restore
  shell: "cd /etcd_backup && \
	ETCDCTL_API=3 {{ bin_dir }}/etcdctl snapshot restore snapshot.db \
	--name etcd-{{ inventory_hostname }} \
	--initial-cluster {{ ETCD_NODES }} \
	--initial-cluster-token etcd-cluster-0 \
	--initial-advertise-peer-urls https://{{ inventory_hostname }}:2380"

- name: restore data to etcd directory
  shell: "cp -rf /etcd_backup/etcd-{{ inventory_hostname }}.etcd/member {{ ETCD_DATA_DIR }}/"

- name: restart etcd service
  service: name=etcd state=restarted

- name: wait for service syncing in a polling manner
  shell: "systemctl is-active etcd.service"
  register: etcd_status
  until: '"active" in etcd_status.stdout'
  retries: 8
  delay: 8
