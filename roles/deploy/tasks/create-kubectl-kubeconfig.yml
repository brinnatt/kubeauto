- name: prepare admin csr for kubectl usage
  template: src=admin-csr.json.j2 dest={{ cluster_dir }}/ssl/admin-csr.json

- name: create admin cert and private key
  shell: "cd {{ cluster_dir }}/ssl && {{ base_dir }}/extra-bin/cfssl gencert \
        -ca=ca.pem \
        -ca-key=ca-key.pem \
        -config=ca-config.json \
        -profile=kubernetes admin-csr.json | {{ base_dir }}/extra-bin/cfssljson -bare admin"

- name: set cluster params
  shell: "kubectl config set-cluster {{ CLUSTER_NAME }} \
        --certificate-authority={{ cluster_dir }}/ssl/ca.pem \
        --embed-certs=true \
        --server={{ KUBE_APISERVER }} \
        --kubeconfig={{ cluster_dir }}/kubectl.kubeconfig"

- name: set client credential params
  shell: "kubectl config set-credentials admin \
        --client-certificate={{ cluster_dir }}/ssl/admin.pem \
        --embed-certs=true \
        --client-key={{ cluster_dir }}/ssl/admin-key.pem \
        --kubeconfig={{ cluster_dir }}/kubectl.kubeconfig"

- name: set context params
  shell: "kubectl config set-context {{ CONTEXT_NAME }} \
        --cluster={{ CLUSTER_NAME }} --user=admin \
        --kubeconfig={{ cluster_dir }}/kubectl.kubeconfig"

- name: choose default context
  shell: "kubectl config use-context {{ CONTEXT_NAME }} \
        --kubeconfig={{ cluster_dir }}/kubectl.kubeconfig"

- name: install kubeconfig
  copy: src={{ cluster_dir }}/kubectl.kubeconfig dest=~/.kube/config mode=0400
