- name: create self-defined user certs directory
  file: name={{ cluster_dir }}/ssl/users/ state=directory

- name: prepare CA configuration
  template: src=ca-config.json.j2 dest={{ cluster_dir }}/ssl/ca-config.json

- name: prepare {{ USER_NAME }} cert request for kubectl
  template: src=user-csr.json.j2 dest={{ cluster_dir }}/ssl/users/{{ USER_NAME }}-csr.json

- name: create {{ USER_NAME }} cert and private key
  shell: "cd {{ cluster_dir }}/ssl/users && {{ base_dir }}/extra-bin/cfssl gencert \
        -ca={{ cluster_dir }}/ssl/ca.pem \
        -ca-key={{ cluster_dir }}/ssl/ca-key.pem \
        -config={{ cluster_dir }}/ssl/ca-config.json \
        -profile=kcfg {{ USER_NAME }}-csr.json | {{ base_dir }}/extra-bin/cfssljson -bare {{ USER_NAME }}"

- name: set cluster params
  shell: "kubectl config set-cluster {{ CLUSTER_NAME }} \
        --certificate-authority={{ cluster_dir }}/ssl/ca.pem \
        --embed-certs=true \
        --server={{ KUBE_APISERVER }} \
        --kubeconfig={{ cluster_dir }}/ssl/users/{{ USER_NAME }}.kubeconfig"

- name: set client credential params
  shell: "kubectl config set-credentials {{ USER_NAME }} \
        --client-certificate={{ cluster_dir }}/ssl/users/{{ USER_NAME }}.pem \
        --embed-certs=true \
        --client-key={{ cluster_dir }}/ssl/users/{{ USER_NAME }}-key.pem \
        --kubeconfig={{ cluster_dir }}/ssl/users/{{ USER_NAME }}.kubeconfig"

- name: set context params
  shell: "kubectl config set-context {{ CONTEXT_NAME }} \
        --cluster={{ CLUSTER_NAME }} --user={{ USER_NAME }} \
        --kubeconfig={{ cluster_dir }}/ssl/users/{{ USER_NAME }}.kubeconfig"

- name: choose default context
  shell: "kubectl config use-context {{ CONTEXT_NAME }} \
        --kubeconfig={{ cluster_dir }}/ssl/users/{{ USER_NAME }}.kubeconfig"

- name: generate clusterrolebind configuration
  template: src=crb.yaml.j2 dest={{ cluster_dir }}/ssl/users/crb-{{ USER_NAME }}.yaml

- name: create clusterrolebind
  shell: "kubectl apply -f {{ cluster_dir }}/ssl/users/crb-{{ USER_NAME }}.yaml"

- debug: msg="check self-defined {{ USER_NAME }} kubeconfigï¼š{{ cluster_dir }}/ssl/users/{{ USER_NAME }}.kubeconfig"
