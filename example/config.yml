############################
# prepare
############################

# optional consolidate your system github.com/dev-sec/ansible-collection-hardening
# (deprecated) no maintenance for a long time, you should adapt to your own system
OS_HARDEN: false


############################
# role:deploy
############################
# default: ca will expire in 100 years
# default: certs issued by the ca will expire in 50 years
CA_EXPIRY: "876000h"
CERT_EXPIRY: "438000h"

# force to recreate CA and other certs, not suggested to set 'true'
CHANGE_CA: false

# kubeconfig params
CLUSTER_NAME: "cluster1"
CONTEXT_NAME: "context-{{ CLUSTER_NAME }}"

# k8s version
K8S_VER: "__k8s_ver__"

# set unique 'k8s_nodename' for each node, if not set(default:'') ip add will be used
# CAUTION: 'k8s_nodename' must consist of lower case alphanumeric characters, '-' or '.',
# and must start and end with an alphanumeric character (e.g. 'example.com'),
# regex used for validation is '[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*'
K8S_NODENAME: "{%- if k8s_nodename != '' -%} \
                    {{ k8s_nodename|replace('_', '-')|lower }} \
               {%- else -%} \
                    k8s-{{ inventory_hostname|replace('.', '-') }} \
               {%- endif -%}"

# use 'K8S_NODENAME' to set hostname
ENABLE_SETTING_HOSTNAME: true


############################
# role:etcd
############################
# Setting different WAL directories can avoid disk I/O contention and improve performance.
ETCD_DATA_DIR: "/var/lib/etcd"
ETCD_WAL_DIR: ""


############################
# role:runtime [containerd,docker]
############################
# [.]Enable the pull acceleration mirror image repository
ENABLE_MIRROR_REGISTRY: true

# [.]Add a trusted private repository
# It must be in the following format as shown below. The protocol headers 'http://' and 'https://' cannot be omitted.
INSECURE_REG:
  - "http://registry.talkschool.cn:5000"
  - "https://reg.yourcompany.com"

# [.]Basic container image
SANDBOX_IMAGE: "registry.talkschool.cn:5000/brinnatt/pause:__pause__"

# [containerd]Container persistent storage directory
CONTAINERD_STORAGE_DIR: "/var/lib/containerd"

# [docker]Container storage directory
DOCKER_STORAGE_DIR: "/var/lib/docker"

# [docker] enable Restful API
DOCKER_ENABLE_REMOTE_API: false


############################
# role:kube-master
############################
# The certificate configuration for the master node of the Kubernetes cluster allows for the addition of multiple IP addresses and domain names
# such as adding public IP addresses and domain names
MASTER_CERT_HOSTS:
  - "10.1.1.1"
  - "k8s.talkschool.cn"

# The subnet mask length of the pod network on the node
# which determines the maximum number of pod IP addresses that can be allocated to each node
# If flannel uses the --kube-subnet-mgr parameter, it will read this setting and allocate a pod subnet for each node.
# https://github.com/coreos/flannel/issues/847
NODE_CIDR_LEN: 24


############################
# role:kube-node
############################
# Kubelet root directory
KUBELET_ROOT_DIR: "/var/lib/kubelet"

# node allow max pod count
MAX_PODS: 110

# configure kube components（kubelet,kube-proxy,dockerd）reserved resources
# look up params in templates/kubelet-config.yaml.j2
KUBE_RESERVED_ENABLED: "no"

# k8s 官方不建议草率开启 system-reserved, 除非你基于长期监控，了解系统的资源占用状况；
# 并且随着系统运行时间，需要适当增加资源预留，数值设置详见templates/kubelet-config.yaml.j2
# 系统预留设置基于 4c/8g 虚机，最小化安装系统服务，如果使用高性能物理机可以适当增加预留
# 另外，集群安装时候apiserver等资源占用会短时较大，建议至少预留1g内存
SYS_RESERVED_ENABLED: "no"


############################
# role:network [flannel,calico,cilium,kube-ovn,kube-router]
############################
# ------------------------------------------- flannel
# [flannel] set flannel backend type "host-gw","vxlan"
FLANNEL_BACKEND: "vxlan"
DIRECT_ROUTING: false

# [flannel] 
flannel_ver: "__flannel__"

# ------------------------------------------- calico
# [calico] IPIP tunnel mode options: [Always, CrossSubnet, Never]
# Cross-subnet can be configured as Always or CrossSubnet
# The public cloud recommends using "always" for simplicity.
# For other cases, you need to modify the network configuration of each public cloud.
# Specific details can be found in the respective public cloud's documentation.
# Secondly, CrossSubnet adopts a tunnel + BGP routing hybrid mode, which can enhance network performance.
# The configuration for the same subnet can be set to "Never".
CALICO_IPV4POOL_IPIP: "Always"

# [calico] Set the host IP used by calico-node. BGP neighbors will establish connections through this address.
# It can be manually specified or discovered automatically.
IP_AUTODETECTION_METHOD: "can-reach={{ groups['kube_master'][0] }}"

# [calico] set calico network backend: bird, vxlan, none
CALICO_NETWORKING_BACKEND: "bird"

# [calico] Set whether the Calico network enables the route reflectors
# If the cluster size exceeds 50 nodes, it is recommended to enable this feature.
CALICO_RR_ENABLED: false

# CALICO_RR_NODES: Configuration for route reflectors of the nodes. If not set, the default is to use the cluster master node.
# CALICO_RR_NODES: ["192.168.1.1", "192.168.1.2"]
CALICO_RR_NODES: [ ]

# [calico] Updated support for calico versions: ["3.19", "3.23"]
calico_ver: "__calico__"

# [calico]calico main version
calico_ver_main: "{{ calico_ver.split('.')[0] }}.{{ calico_ver.split('.')[1] }}"

# ------------------------------------------- cilium
# [cilium]image versions
cilium_ver: "__cilium__"
cilium_connectivity_check: false
cilium_hubble_enabled: false
cilium_hubble_ui_enabled: false

# ------------------------------------------- kube-ovn
# [kube-ovn]offline tar package
kube_ovn_ver: "__kube_ovn__"

# ------------------------------------------- kube-router
# [kube-router] There are limitations on public cloud platforms.
# Generally, ipinip needs to be always enabled; in private environments, it can be set to "subnet".
OVERLAY_TYPE: "full"

# [kube-router] NetworkPolicy supports enabling/disabling
FIREWALL_ENABLE: true

# [kube-router]kube-router image version
kube_router_ver: "__kube_router__"


############################
# role:cluster-addon
############################
# coredns enabled by default
dns_install: "yes"
corednsVer: "__coredns__"
ENABLE_LOCAL_DNS_CACHE: true
dnsNodeCacheVer: "__dns_node_cache__"
# set local dns cache address
LOCAL_DNS_CACHE: "169.254.20.10"

# metric server enabled by default
metricsserver_install: "yes"
metricsVer: "__metrics__"

# dashboard disabled by default
dashboard_install: "no"
dashboardVer: "__dashboard__"

# prometheus disabled by default
prom_install: "no"
prom_namespace: "monitor"
prom_chart_ver: "__prom_chart__"

# Kubeapps is automatically installed, disabled by default.
# If you choose to install it, it will also install local-storage (with the configuration of storageClass: "local-path") by default.
kubeapps_install: "no"
kubeapps_install_namespace: "kubeapps"
kubeapps_working_namespace: "default"
kubeapps_storage_class: "local-path"
kubeapps_chart_ver: "__kubeapps_chart__"

# local-storage (local-path-provisioner) automatically installed, disabled by default.
local_path_provisioner_install: "no"
local_path_provisioner_ver: "__local_path_provisioner__"
# Set the default local storage path
local_path_provisioner_dir: "/opt/local-path-provisioner"

# nfs-provisioner automatically installed, disabled by default
nfs_provisioner_install: "no"
nfs_provisioner_namespace: "kube-system"
nfs_provisioner_ver: "__nfs_provisioner__"
nfs_storage_class: "managed-nfs-storage"
nfs_server: "192.168.1.10"
nfs_path: "/data/nfs"

# network-check automatically installed, disabled by default
network_check_enabled: false
network_check_schedule: "*/5 * * * *"

# kubeblocks automatically installed, disabled by default
kubeblocks_install: "no"
kb_addon_mysql_install: "no"
kb_addon_pg_install: "no"
kb_addon_redis_install: "no"
kb_addon_minio_install: "no"
kb_addon_es_install: "no"
kb_addon_mongodb_install: "no"


############################
# role:harbor
############################
# Harbor version, complete version number
HARBOR_VER: "__harbor__"
HARBOR_DOMAIN: "harbor.talkschool.cn"
HARBOR_PATH: /var/data
HARBOR_TLS_PORT: 8443
HARBOR_REGISTRY: "{{ HARBOR_DOMAIN }}:{{ HARBOR_TLS_PORT }}"

# if set 'false', you need to put certs named harbor.pem and harbor-key.pem in directory 'down'
HARBOR_SELF_SIGNED_CERT: true

# install extra component
HARBOR_WITH_TRIVY: false
